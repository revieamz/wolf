# Python code @beducode
 

import base64, codecs
magic = 'import requests
import json
import time
import sys
import random
import argparse
import colorama
import pathlib
import math
import getpass
import socket
import datetime as dt
import keyboard
from colorama import Fore, Back, Style
from random import randint, uniform
from decimal import Decimal, getcontext
from datetime import datetime, date, timedelta
from urllib.request import Request, urlopen
from os import system, name
from inputimeout import inputimeout, TimeoutOccurred
from faunadb import query as q
from faunadb.objects import Ref
from faunadb.client import FaunaClient

colorama.init(autoreset=True)

# SET BETSET
parser = argparse.ArgumentParser(description="WOLF.BET BOT @beducode")
parser.add_argument(
    "-c", "--betset", default=0, help="Enter Your Betset Number (default: 0)"
)
my_namespace = parser.parse_args()
nobet = int(my_namespace.betset)

# LOAD SETTING
with open("settings.json", "r") as filesetup:
    data = filesetup.read()
ob = json.loads(data)


# CONFIG WARNAbett
res = Style.RESET_ALL
putih = Style.NORMAL + Fore.WHITE
putih2 = Style.BRIGHT + Fore.WHITE
hitam = Style.BRIGHT + Fore.BLACK
hitam2 = Style.BRIGHT + Fore.BLACK
ungu = Style.NORMAL + Fore.MAGENTA
hijau = Style.NORMAL + Fore.GREEN
hijau2 = Style.BRIGHT + Fore.GREEN
merah = Style.NORMAL + Fore.RED
merah2 = Style.BRIGHT + Fore.RED
biru = Style.NORMAL + Fore.BLUE
biru2 = Style.BRIGHT + Fore.BLUE
biru3 = Style.BRIGHT + Fore.LIGHTCYAN_EX
profcolor = Style.BRIGHT + Back.GREEN + Fore.WHITE
losecolor = Style.BRIGHT + Back.RED + Fore.WHITE
rccolor = Style.BRIGHT + Back.WHITE + Fore.BLACK
rbcolor = Style.NORMAL + Back.YELLOW + Fore.BLACK
rcfontcolor = Style.NORMAL + Fore.BLACK
kuning = Style.NORMAL + Fore.YELLOW
kuning2 = Style.BRIGHT + Fore.YELLOW
cyan = Style.NORMAL + Fore.CYAN
cyan2 = Style.BRIGHT + Fore.LIGHTCYAN_EX


c = requests.Session()
proxies = []
freeversion = False
limitip = False
stoponwinactivated = False
uuid = ""
startbals = 0
client = FaunaClient(secret="fnAEAcAKliACCJH00BfVSH2dPZ0EIMPWHlMCTbEX")
user_agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36"

header = {
    "content-type": "application/json",
    "user-agent": "Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36",
    "x-requested-with": "XMLHttpRequest",
    'Content-Type': 'application/x-www-form-urlencoded'
}

# CONTROLLER PROCESS

# KEYBOARD SHORTCUT
stoponwinkey = "ctrl+w"


def stoponwin_triger():
    global stoponwinactivated
    stoponwinactivated = True


# BANNER
def banner():
    banner = "\n\n"
    banner = banner + biru2 + "▄▄▌ ▐ ▄▌      ▄▄▌  ·▄▄▄▄▄▄▄· ▄▄▄ .▄▄▄▄▄\n"
    banner = banner + "██· █▌▐█▪     ██•  ▐▄▄·▐█ ▀█▪▀▄.▀·•██  \n"
    banner = banner + "██▪▐█▐▐▌ ▄█▀▄ ██▪  ██▪ ▐█▀▀█▄▐▀▀▪▄ ▐█." + biru + "▪\n"
    banner = banner + "▐█▌██▐█▌▐█▌.▐▌▐█▌▐▌██▌.██▄▪▐█▐█▄▄▌ ▐█▌·\n"
    banner = banner + " ▀▀▀▀ ▀▪ ▀█▄▀▪.▀▀▀ ▀▀▀ ·▀▀▀▀  ▀▀▀  ▀▀▀ \n"
    banner = banner + "\n"

    banner = banner + putih2 + "Author      : "
    banner = banner + biru2 + "github@beducode\n"
    banner = banner + putih2 + "Contact     : "
    banner = banner + biru2 + "@beduplay | @riosuyanto \n"
    banner = banner + putih2 + "Version     : "
    banner = banner + biru2 + "v.1.5.1\n" + res
    print(banner)


def timeprocess(sec):
    minutes, seconds = divmod(sec, 60)
    hours, minutes = divmod(minutes, 60)
    days, hours = divmod(hours, 24)
    stopwatchx = (days, hours, minutes, seconds)

    return stopwatchx


# CLEAN PAGE
def clear():

    # WINDOWS
    if name == "nt":
        _ = system("cls")

    # MAC / LINUX
    else:
        _ = system("clear")


# FORMAT DECIMAL 8 DIGIT


def rev(num):
    if len(num) < 8:
        panjang_nol = int(8 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    if len(num) == 8:
        panjang_nol = int(8 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    else:
        len_num = len(num)
        end = num[-8:]
        first = num[: len_num - 8]
        result = first + "." + end
    return result


# FORMAT DECIMAL 10 DIGIT
def revwolf(num):
    if len(num) < 10:
        panjang_nol = int(10 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    if len(num) == 10:
        panjang_nol = int(10 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    else:
        len_num = len(num)
        end = num[-10:]
        first = num[: len_num - 10]
        result = first + "." + end
        tmprs = int(float(result) * (10 ** 10))
        result = first + "." + end
    return result


# FORMAT 11 DIGIT
def revwolfbet(num):
    if len(num) < 11:
        panjang_nol = int(11 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    if len(num) == 11:
        panjang_nol = int(11 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    else:
        len_num = len(num)
        end = num[-11:]
        first = num[: len_num - 11]
        result = first + "." + end
        tmprs = int(float(result) * (10 ** 11))
        result = first + "." + end
    return result


# REFRESH PAGE
def refresh_page():
    clear()
    banner()

# API INDODAX FOR GET LAST PRICE
def indodax(coin):
    try:
        pair = (coin).lower() + "_idr"

        url = "https://indodax.com/api/" + str(pair) + "/ticker"

        indx = c.get(url)
        jsindx = json.loads(indx.text)
        pricepair = int(jsindx["ticker"]["last"])
    except:
        coinpair = (coin).lower() + "_idr"

        url = "https://beducode-price.herokuapp.com/price/" + str(coinpair)

        price = c.get(url)
        data = json.loads(price.text)
        pricepair = data["last"]

    return pricepair


# FORMAT VALUE TO IDR


def rupiah_format(angka):
    return "Rp " + "{:0,.2f}".format(angka)


# FORMAT VALUE TO USD


def dollar_format(angka):
    return "$ " + "{:0,.2f}".format(angka)


# LIST END POINT


def navigate_api(nav):
    if nav == "start":
        endpoint = "https://wolf.bet/api/v1/user/balances"
    elif nav == "bet":
        endpoint = "https://wolf.bet/api/v1/dice/manual/play"
    elif nav == "limbo":
        endpoint = "https://wolf.bet/api/v2/limbo/manual/play"
    else:
        endpoint = "https://wolf.bet/api/v1/game/seed/refresh"

    return endpoint


def call_api(method, url, hd, key, dt):
    result = None
    while result is None:
        if method == "GET":
            try:
                # connect
                result = c.get(url, headers=hd, auth=key, data=dt)
                if result.status_code != 200:
                    time.sleep(2)
                    result = None
                    call_api(method, url, hd, dt)
            except:
                time.sleep(2)
        else:
            try:
                # connect
                result = c.post(url, headers=hd, auth=key, data=dt)
                if result.status_code != 200:
                    time.sleep(2)
                    result = None
                    call_api(method, url, hd, dt)
            except:
                time.sleep(2)

    return json.loads(result.text)


# VALIDATE RUNNING SCRIPT
## FOR DEV
def remainloseinfo(remainlose):
    refresh_page()
    print(putih2 + "Remain Report!!! " + res)
    print(putih2 + "Remain Lose : " + res + merah2 + rev(str(remainlose)) + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


# TARGET LOSS
def saveprofit(pf, bl, mb, ls, tp):
    refresh_page()
    print(putih2 + "Saving profit Telah Tercapai!! " + res)
    print(putih2 + "Total Profit : " + res + hijau2 + rev(str(pf)) + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + revwolfbet(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + revwolf(str(bl)) + ress)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


# TARGET BET
def cutloss(bl, sb, ls, tp):
    refresh_page()
    ct = sb - bl
    print(putih2 + "Target Bet Telah Tercapai!! " + res)
    print(putih2 + "Loss : " + res + merah2 + rev(str(ct)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + revwolf(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


# TARGET LOSS
def targetloss(bl, sb, mb, ls, tp):
    refresh_page()
    tl = bl - sb
    print(putih2 + "Target Loss Telah Tercapai!! " + res)
    print(putih2 + "Total Lose : " + res + merah2 + rev(str(tl)) + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + revwolfbet(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + revwolf(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


# TARGET PROFIT
def targetprofit(pf, bl, mb, ls, tp):
    refresh_page()

    print(putih2 + "Target Profit Telah Tercapai : " + res + hijau2 + rev(str(pf)) + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + revwolfbet(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + revwolf(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


# TARGET BALANCE
def targetbalance(pf, bl, mb, ls, tp):
    clear()
    banner()
    print(putih2 + "Target Balance Telah Tercapai : " + res + hijau2 + rev(str(pf)) + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + revwolfbet(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + revwolf(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


# STOP ON WIN
def stoponwin(pf, bl, mb, ls, tp):
    refresh_page()

    print(putih2 + "Stop on win aktif, Profit Anda : " + res + hijau2 + rev(str(pf)) + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + revwolfbet(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + revwolf(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()
    
# STOP ON WIN
def maxls(pf, bl, mb, ls, tp):
    refresh_page()

    print(putih2 + "Maximum Lose Strike aktif, Profit Anda : " + res + hijau2 + rev(str(pf)) + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + revwolfbet(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + revwolf(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()

# MAXIMUM LEVEL
def maxlevel(pf, bl, mb, ls, tp):
    refresh_page()

    print(putih2 + "Maximum Level Resiko aktif, Profit Anda : " + res + hijau2 + rev(str(pf)) + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + revwolfbet(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + revwolf(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


## FIBONACCHI CALC
def fibocal(n):
    if n <= 1:
        return n + 1
    else:
        return fibocal(n - 1) + fibocal(n - 2)


## UI RANGE CHANCE
def rangeChance(hc):
    panjangrd = len(str(hc))
    if panjangrd == 3:
        chancerand = " " + str(hc) + "   "
    if panjangrd == 4:
        chancerand = " " + str(hc) + "  "
    if panjangrd == 5:
        chancerand = " " + str(hc) + " "

    return chancerand


## RANDOM CHANCE
def randomChance(min, max):
    hasil_chance = round(random.uniform(float(min), float(max)), 2)

    return hasil_chance


## SETTING CHANCE
def settingChance(LCMin, LCMax):
    if (
        ob["Betset"][nobet]["Random Chance"]["Toggle"] == "ON"
        or ob["Betset"][nobet]["Random Chance"]["Toggle"] == "On"
        or ob["Betset"][nobet]["Random Chance"]["Toggle"] == "on"
    ):

        chanceval = randomChance(LCMin, LCMax)
        chancerand = rangeChance(chanceval)

    else:
        chanceval = float(LCMin)

        chancerand = rangeChance(chanceval)

    return chanceval, chancerand

## CHECK LOGIN
def checklogin(status):
    if status is True:
        refresh_page()

        print(merah2 + "Periksa Kembali API key Anda Pada File settings.json" + res)
        sys.exit()
    else:
        pass

## VALIDATE BET
def validatebet(bb, ccy):
    refresh_page()
    
    print(putih2 + "Base bet harus lebih besar dari " + res + hijau + rev(str(bb)) + res + " " + putih2 + str(ccy.upper()) + res)
    print(putih + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()   
    
## VALIDATE BET
def validatebalance(bb, ccy):
    refresh_page()
    
    print(putih2 + "Balance anda kurang dari minimal bet " + res + hijau + rev(str(bb)) + res + " " + putih2 + str(ccy.upper()) + res)
    print(putih + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()    
    
## MINIMAL BALANCE
def validateminbalance(minbalance, ccy):
    refresh_page()
    
    print(putih2 + "Balance anda harus lebih dari " + res + hijau + revminbal(str(minbalance)) + res + " " + putih2 + str(ccy.upper()) + res)
    print(putih + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()    
    
## INFLUENCE BALANCE
def balancetidakcukup(bl, mb, ls, tp):
    refresh_page()
    print(putih2 + "Balance Anda Tidak Cukup Untuk Melanjutkan Bet!! " + res)
    print(putih2 + "Sisa Balance Anda " + res + hijau + revwolf(str(bl)) + res + " " + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + revwolfbet(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + revwolf(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()  
    
def balancecaldemo(bl, mb, ls, tp, sb): 
    refresh_page()
    print(putih2 + "Hasil Kalkulasi Balance Demo!! " + res)
    print(putih2 + "Balance Yang Anda Gunakan " + res + hijau + revwolf(str(bl)) + res + " " + r'
love = ''
god = ''
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))